Metadata-Version: 2.4
Name: log-whisperer
Version: 0.1.0
Summary: An AI log analyzer with chat interface
Home-page: https://github.com/yourusername/log-whisperer
Author: Your Name
Author-email: Your Name <your.email@example.com>
Maintainer-email: Your Name <your.email@example.com>
License: MIT License
        
        Copyright (c) 2024 Log Whisperer
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Homepage, https://github.com/yourusername/log-whisperer
Project-URL: Documentation, https://github.com/yourusername/log-whisperer#readme
Project-URL: Repository, https://github.com/yourusername/log-whisperer.git
Project-URL: Bug Tracker, https://github.com/yourusername/log-whisperer/issues
Keywords: log,analysis,ai,chat,langchain,llm
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Debugging
Classifier: Topic :: System :: Logging
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: click>=8.0.0
Requires-Dist: langchain>=0.1.0
Requires-Dist: langchain-community>=0.0.1
Requires-Dist: pyyaml>=6.0
Requires-Dist: rich>=13.0.0
Requires-Dist: prompt-toolkit>=3.0.0
Provides-Extra: openai
Requires-Dist: langchain-openai; extra == "openai"
Provides-Extra: anthropic
Requires-Dist: langchain-anthropic; extra == "anthropic"
Provides-Extra: google
Requires-Dist: langchain-google-genai; extra == "google"
Provides-Extra: azure
Requires-Dist: langchain-openai; extra == "azure"
Provides-Extra: cohere
Requires-Dist: langchain-cohere; extra == "cohere"
Provides-Extra: huggingface
Requires-Dist: langchain-huggingface; extra == "huggingface"
Provides-Extra: ollama
Requires-Dist: langchain-ollama; extra == "ollama"
Provides-Extra: all
Requires-Dist: langchain-openai; extra == "all"
Requires-Dist: langchain-anthropic; extra == "all"
Requires-Dist: langchain-google-genai; extra == "all"
Requires-Dist: langchain-cohere; extra == "all"
Requires-Dist: langchain-huggingface; extra == "all"
Requires-Dist: langchain-ollama; extra == "all"
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# Log Whisperer üîç

An AI-powered log analyzer with an interactive chat interface. Analyze your log files using natural language queries with support for multiple LLM providers.

## Features

- **Multiple LLM Provider Support**: OpenAI, Anthropic, Google Gemini, Cohere, Hugging Face, and Ollama
- **Interactive Chat Interface**: Natural language queries about your log files
- **Memory Persistence**: Maintains conversation context for follow-up questions
- **Conversation Saving**: Save and resume analysis sessions
- **Dynamic Package Installation**: Automatically installs required LLM provider packages
- **Beautiful CLI**: Rich, colorful command-line interface
- **Easy Configuration**: Simple setup process similar to AWS CLI

## Installation

```bash
pip install log-whisperer
```

## Quick Start

### 1. Configure Your LLM Provider

```bash
log-whisperer configure
```

This will guide you through setting up your preferred LLM provider with an interactive configuration wizard.

### 2. Start Analyzing Logs

```bash
log-whisperer chat --log-file /path/to/your/logfile.log --save /path/to/conversation.json
```

### 3. Chat with Your Logs

```
Agent: üîç Welcome to Log Whisperer!

I'm ready to help you analyze your log file: `application.log`

You can ask me questions like:
- "What errors do you see in this log?"
- "Summarize the main events"
- "Are there any patterns or anomalies?"
- "What happened around timestamp X?"

Type 'quit', 'exit', or press Ctrl+C to end the session.

You: What errors occurred in the last hour?

Agent: Based on the log analysis, I found several errors in the last hour:
...
```

## Supported LLM Providers

| Provider | Models | API Key Required |
|----------|--------|------------------|
| OpenAI | GPT-3.5, GPT-4, GPT-4 Turbo | Yes |
| Anthropic | Claude 3 (Haiku, Sonnet, Opus) | Yes |
| Google | Gemini Pro, Gemini Pro Vision | Yes |
| Cohere | Command, Command Nightly | Yes |
| Hugging Face | Various open-source models | Yes |
| Ollama | Local models (Llama2, Mistral, etc.) | No |

## Commands

### `log-whisperer configure`
Interactive configuration wizard to set up your LLM provider.

### `log-whisperer chat`
Start interactive chat session for log analysis.

Options:
- `--log-file PATH`: Path to the log file to analyze (required)
- `--save PATH`: Path to save the conversation (optional)

### `log-whisperer status`
Show current configuration status.

### `log-whisperer reset`
Reset all configuration settings.

## Configuration

Configuration is stored in `~/.log-whisperer/config.yaml`. You can edit this file manually or use the interactive configuration command.

Example configuration:
```yaml
provider:
  provider: openai
  model: gpt-3.5-turbo
  api_key: sk-...
  temperature: 0.7
  max_tokens: 2000
```

## Environment Variables

You can also set API keys using environment variables:
- `OPENAI_API_KEY`
- `ANTHROPIC_API_KEY`
- `GOOGLE_API_KEY`
- `COHERE_API_KEY`
- `HUGGINGFACEHUB_API_TOKEN`

## Examples

### Analyze Application Logs
```bash
log-whisperer chat --log-file /var/log/myapp.log --save analysis_session.json
```

### Analyze Web Server Logs
```bash
log-whisperer chat --log-file /var/log/nginx/access.log
```

### Resume Previous Session
```bash
log-whisperer chat --log-file /var/log/myapp.log --save analysis_session.json
```
The tool will automatically load the previous conversation if the save file exists.

## Development

### Installation for Development
```bash
git clone https://github.com/yourusername/log-whisperer.git
cd log-whisperer
pip install -e .
```

### Project Structure
```
log-whisperer/
‚îú‚îÄ‚îÄ log_whisperer/
‚îÇ   ‚îú‚îÄ‚îÄ __init__.py
‚îÇ   ‚îú‚îÄ‚îÄ cli.py          # CLI interface
‚îÇ   ‚îú‚îÄ‚îÄ config.py       # Configuration management
‚îÇ   ‚îú‚îÄ‚îÄ llm_factory.py  # Dynamic LLM provider loading
‚îÇ   ‚îî‚îÄ‚îÄ chat.py         # Chat interface and log analysis
‚îú‚îÄ‚îÄ setup.py
‚îú‚îÄ‚îÄ requirements.txt
‚îî‚îÄ‚îÄ README.md
```

## Contributing

1. Fork the repository
2. Create a feature branch (`git checkout -b feature/amazing-feature`)
3. Commit your changes (`git commit -m 'Add some amazing feature'`)
4. Push to the branch (`git push origin feature/amazing-feature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Troubleshooting

### Common Issues

**Error: "No LLM provider configured"**
- Run `log-whisperer configure` to set up your LLM provider

**Error: "Failed to install langchain-xxx"**
- Make sure you have internet connection and pip is up to date
- Try installing the provider package manually: `pip install langchain-openai`

**Error: "Connection test failed"**
- Check your API key is correct
- Verify your internet connection
- For Ollama, ensure the service is running

**Large log files**
- The tool loads the first 10,000 characters of your log file for analysis
- For very large files, consider splitting them or using log rotation

## Support

If you encounter any issues or have questions, please:
1. Check the troubleshooting section above
2. Search existing [issues](https://github.com/yourusername/log-whisperer/issues)
3. Create a new issue with detailed information about your problem

## Changelog

### v0.1.0
- Initial release
- Support for 6 major LLM providers
- Interactive chat interface
- Conversation persistence
- Dynamic package installation
